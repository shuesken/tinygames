{"version":3,"sources":["../../src/common/Game.js"],"names":["PADDING","WIDTH","HEIGHT","PADDLE_WIDTH","PADDLE_HEIGHT","ACCELERATION","Paddle","gameEngine","options","props","health","other","Object","assign","type","BaseTypes","TYPES","INT16","DynamicObject","Ball","velocity","percent","Game","physicsEngine","SimplePhysicsEngine","on","gameLogic","bind","serverSideInit","serverSidePlayerJoined","serverSidePlayerDisconnected","clientSideInit","clientSideDraw","serializer","registerClass","ball","ignorePhysics","position","x","y","Math","random","TwoVector","setTimeout","paddles","world","queryObjects","instanceType","queryObject","length","resetBall","inputData","playerId","playerPaddle","input","addObjectToWorld","playerID","ev","controls","KeyboardControls","renderer","clientEngine","bindKey","repeat","updateEl","el","obj","style","top","left","document","querySelector","GameEngine"],"mappings":"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","sourcesContent":["import { GameEngine, BaseTypes, TwoVector, DynamicObject, KeyboardControls, SimplePhysicsEngine } from 'lance-gg'\n\nconst PADDING = 20\nconst WIDTH = 600\nconst HEIGHT = 600\nconst PADDLE_WIDTH = 15\nconst PADDLE_HEIGHT = 75\n\nconst ACCELERATION = 1.2\n\n// A paddle has a health attribute\nclass Paddle extends DynamicObject {\n  constructor (gameEngine, options, props) {\n    super(gameEngine, options, props)\n    this.health = 15\n  }\n\n  static get netScheme () {\n    return Object.assign({\n      health: { type: BaseTypes.TYPES.INT16 }\n    }, super.netScheme)\n  }\n\n  syncTo (other) {\n    super.syncTo(other)\n    this.health = other.health\n  }\n}\n\n// a game object to represent the ball\nclass Ball extends DynamicObject {\n  constructor (gameEngine, options, props) {\n    super(gameEngine, options, props)\n  }\n\n  // avoid gradual synchronization of velocity\n  get bending () {\n    return { velocity: { percent: 0.0 } }\n  }\n\n  syncTo (other) {\n    super.syncTo(other)\n  }\n}\n\nexport default class Game extends GameEngine {\n  constructor (options) {\n    super(options)\n    this.physicsEngine = new SimplePhysicsEngine({ gameEngine: this })\n\n    // common code\n    this.on('postStep', this.gameLogic.bind(this))\n\n    // server-only code\n    this.on('server__init', this.serverSideInit.bind(this))\n    this.on('server__playerJoined', this.serverSidePlayerJoined.bind(this))\n    this.on('server__playerDisconnected', this.serverSidePlayerDisconnected.bind(this))\n\n    // client-only code\n    this.on('client__rendererReady', this.clientSideInit.bind(this))\n    this.on('client__draw', this.clientSideDraw.bind(this))\n  }\n\n  registerClasses (serializer) {\n    serializer.registerClass(Paddle)\n    serializer.registerClass(Ball)\n  }\n\n  resetBall (ball) {\n    this.ignorePhysics = true\n    ball.position.x = WIDTH / 2\n    ball.position.y = Math.random() * HEIGHT\n    ball.velocity = new TwoVector(2, 2)\n    setTimeout(() => {\n      this.ignorePhysics = false\n    }, 5000)\n  }\n\n  gameLogic () {\n    const paddles = this.world.queryObjects({ instanceType: Paddle })\n    const ball = this.world.queryObject({ instanceType: Ball })\n    if (!ball || paddles.length !== 2) return\n\n    // CHECK LEFT EDGE:\n    if (ball.position.x <= PADDING + PADDLE_WIDTH &&\n            ball.position.y >= paddles[0].y && ball.position.y <= paddles[0].position.y + PADDLE_HEIGHT &&\n            ball.velocity.x < 0) {\n      // ball moving left hit player 1 paddle\n      ball.velocity.x *= -1 * ACCELERATION\n      ball.position.x = PADDING + PADDLE_WIDTH + 1\n    } else if (ball.position.x <= 0) {\n      // ball hit left wall\n      ball.velocity.x *= -1 * ACCELERATION\n      ball.position.x = 0\n      paddles[0].health--\n      this.resetBall(ball)\n    }\n\n    // CHECK RIGHT EDGE:\n    if (ball.position.x >= WIDTH - PADDING - PADDLE_WIDTH &&\n            ball.position.y >= paddles[1].position.y && ball.position.y <= paddles[1].position.y + PADDLE_HEIGHT &&\n            ball.velocity.x > 0) {\n      // ball moving right hits player 2 paddle\n      ball.velocity.x *= -1\n      ball.position.x = WIDTH - PADDING - PADDLE_WIDTH - 1\n    } else if (ball.position.x >= WIDTH) {\n      // ball hit right wall\n      ball.velocity.x *= -1\n      ball.position.x = WIDTH - 1\n      paddles[1].health--\n      this.resetBall(ball)\n    }\n\n    // ball hits top or bottom edge\n    if (ball.position.y <= 0) {\n      ball.position.y = 1\n      ball.velocity.y *= -1\n    } else if (ball.position.y >= HEIGHT) {\n      ball.position.y = HEIGHT - 1\n      ball.velocity.y *= -1\n    }\n  }\n\n  processInput (inputData, playerId) {\n    super.processInput(inputData, playerId)\n\n    // get the player paddle tied to the player socket\n    const playerPaddle = this.world.queryObject({ playerId })\n    if (playerPaddle) {\n      if (inputData.input === 'up' && playerPaddle.position.y > 0) {\n        playerPaddle.position.y -= 10\n      } else if (inputData.input === 'down' && playerPaddle.position.y < HEIGHT - 75) {\n        playerPaddle.position.y += 10\n      }\n    }\n  }\n\n  //\n  // SERVER ONLY CODE\n  //\n  serverSideInit () {\n    // create the paddles and the ball\n    this.addObjectToWorld(new Paddle(this, null, { playerID: 0, position: new TwoVector(PADDING, 0) }))\n    this.addObjectToWorld(new Paddle(this, null, { playerID: 0, position: new TwoVector(WIDTH - PADDING, 0) }))\n    this.addObjectToWorld(new Ball(this, null, {\n      position: new TwoVector(WIDTH / 2, HEIGHT / 2),\n      velocity: new TwoVector(2, 2)\n    }))\n  }\n\n  // attach newly connected player to next available paddle\n  serverSidePlayerJoined (ev) {\n    const paddles = this.world.queryObjects({ instanceType: Paddle })\n    if (paddles[0].playerId === 0) {\n      paddles[0].playerId = ev.playerId\n    } else if (paddles[1].playerId === 0) {\n      paddles[1].playerId = ev.playerId\n    }\n  }\n\n  serverSidePlayerDisconnected (ev) {\n    const paddles = this.world.queryObjects({ instanceType: Paddle })\n    if (paddles[0].playerId === ev.playerId) {\n      paddles[0].playerId = 0\n    } else if (paddles[1].playerId === ev.playerId) {\n      paddles[1].playerId = 0\n    }\n  }\n\n  //\n  // CLIENT ONLY CODE\n  //\n  clientSideInit () {\n    this.controls = new KeyboardControls(this.renderer.clientEngine)\n    this.controls.bindKey('up', 'up', { repeat: true })\n    this.controls.bindKey('down', 'down', { repeat: true })\n  }\n\n  clientSideDraw () {\n    function updateEl (el, obj) {\n      const health = obj.health > 0 ? obj.health : 15\n      el.style.top = obj.position.y + 10 + 'px'\n      el.style.left = obj.position.x + 'px'\n    }\n\n    const paddles = this.world.queryObjects({ instanceType: Paddle })\n    const ball = this.world.queryObject({ instanceType: Ball })\n    if (!ball || paddles.length !== 2) return\n    updateEl(document.querySelector('.ball'), ball)\n    updateEl(document.querySelector('.paddle1'), paddles[0])\n    updateEl(document.querySelector('.paddle2'), paddles[1])\n  }\n}\n"],"file":"Game.js"}